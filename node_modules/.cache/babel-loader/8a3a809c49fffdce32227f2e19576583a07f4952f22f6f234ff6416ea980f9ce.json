{"ast":null,"code":"var _jsxFileName = \"/home/jonas/Documentos/Fuentes/React_Lab/rick-morty/src/App.js\",\n  _s = $RefreshSig$();\nimport imageRick from './img/rick-morty.png';\nimport './App.css';\nimport { useState } from \"react\";\nimport Characters from './components/Characters';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState(null);\n\n  // se construye el get asyncrono apra la obtencion de datos\n  const reqApi = async () => {\n    const api = await fetch(\"https://rickandmortyapi.com/api/character\");\n    const characterApi = await api.json();\n    // es el campo que viene de la respuesta del API : info, results\n    // Le pasamos el resultado del api al useState \n    setCharacters(characterApi.results);\n  };\n\n  //console.log(characters)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Rick & Morty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), characters ? /*#__PURE__*/_jsxDEV(Characters, {\n        characters: characters,\n        setCharacters: setCharacters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageRick,\n          alt: \"Rick & Morty\",\n          className: \"img-home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reqApi,\n          className: \"btn-search\",\n          children: \" Buscar Personajes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EWjueY3mS1XdNC7arVpJhRBaBpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["imageRick","useState","Characters","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","characters","setCharacters","reqApi","api","fetch","characterApi","json","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/home/jonas/Documentos/Fuentes/React_Lab/rick-morty/src/App.js"],"sourcesContent":["import imageRick from './img/rick-morty.png';\nimport './App.css';\nimport { useState } from \"react\"\nimport Characters from './components/Characters';\n\nfunction App() {\n\n  const [characters, setCharacters] = useState(null);\n\n  // se construye el get asyncrono apra la obtencion de datos\n  const reqApi = async () => {\n    const api = await fetch(\"https://rickandmortyapi.com/api/character\")\n    const characterApi = await api.json()\n    // es el campo que viene de la respuesta del API : info, results\n    // Le pasamos el resultado del api al useState \n    setCharacters(characterApi.results)\n  };\n\n  //console.log(characters)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"title\">Rick & Morty</h1>\n        {\n          characters ? (\n            <Characters characters={characters} setCharacters={setCharacters}/>\n          ) : (\n             <>\n                <img src={imageRick} alt=\"Rick & Morty\" className=\"img-home\"/>\n                <button onClick ={reqApi} className=\"btn-search\"> Buscar Personajes</button>\n             </> \n          )\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,sBAAsB;AAC5C,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMU,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;IACpE,MAAMC,YAAY,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrC;IACA;IACAL,aAAa,CAACI,YAAY,CAACE,OAAO,CAAC;EACrC,CAAC;;EAED;;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA;QAAIa,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAErCb,UAAU,gBACRL,OAAA,CAACF,UAAU;QAACO,UAAU,EAAEA,UAAW;QAACC,aAAa,EAAEA;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAElElB,OAAA,CAAAE,SAAA;QAAAY,QAAA,gBACGd,OAAA;UAAKmB,GAAG,EAAEvB,SAAU;UAACwB,GAAG,EAAC,cAAc;UAACP,SAAS,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9DlB,OAAA;UAAQqB,OAAO,EAAGd,MAAO;UAACM,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC7E,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACd,EAAA,CAhCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}